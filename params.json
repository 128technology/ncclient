{"name":"ncclient","tagline":"Python library for NETCONF clients","body":"[![Build Status](https://travis-ci.org/ncclient/ncclient.svg?branch=master)](https://travis-ci.org/ncclient/ncclient)\r\n[![Coverage Status](https://coveralls.io/repos/github/ncclient/ncclient/badge.svg?branch=master)](https://coveralls.io/github/ncclient/ncclient?branch=master)\r\n[![Documentation Status](https://readthedocs.org/projects/ncclient/badge/?version=latest)](https://readthedocs.org/projects/ncclient/?badge=latest)\r\n\r\nncclient: Python library for NETCONF clients\r\n--------------------------------------------\r\n\r\n##Important - Python3 support!\r\n\r\n**ncclient 0.5.0 with Python 3 support is now in pypitest. To install and test:**\r\n\r\n```pip install -i https://testpypi.python.org/pypi ncclient```\r\n\r\nLatest stable Python2 version is *0.4.7* (Jan 2016) and is now on PyPi:\r\n\r\n```pip install ncclient```\r\n\r\n\r\nncclient is a Python library that facilitates client-side scripting\r\nand application development around the NETCONF protocol. `ncclient` was\r\ndeveloped by [Shikar Bhushan](http://schmizz.net). It is now maintained\r\nby [Leonidas Poulopoulos (@leopoul)](http://ncclient.org)\r\n\r\n**Docs**: [http://ncclient.readthedocs.org](http://ncclient.readthedocs.org)\r\n\r\n**PyPI**: [https://pypi.python.org/pypi/ncclient](https://pypi.python.org/pypi/ncclient)\r\n\r\n#### Requirements:\r\n* version >= Python 2.6\r\n* setuptools 0.6+\r\n* Paramiko 1.7+\r\n* lxml 3.3.0+\r\n* libxml2\r\n* libxslt\r\n\r\nIf you are on Debian/Ubuntu install the following libs (via aptitude or apt-get):\r\n* libxml2-dev\r\n* libxslt1-dev\r\n\r\n#### Installation:\r\n\r\n    [ncclient] $ sudo python setup.py install\r\n    \r\nor via pip:\r\n\r\n    pip install ncclient\r\n\r\n#### Examples:\r\n\r\n    [ncclient] $ python examples/juniper/*.py\r\n\r\n### Usage\r\n####Get device running config\r\nUse either an interactive Python console (ipython)\r\nor integrate the following in your code:\r\n\r\n    from ncclient import manager\r\n\r\n    with manager.connect(host=host, port=830, username=user, hostkey_verify=False) as m:\r\n        c = m.get_config(source='running').data_xml\r\n        with open(\"%s.xml\" % host, 'w') as f:\r\n            f.write(c)\r\n\r\nAs of 0.4.1 ncclient integrates Juniper's and Cisco's forks, lots of new concepts\r\nhave been introduced that ease management of Juniper and Cisco devices respectively.\r\nThe biggest change is the introduction of device handlers in connection paramms.\r\nFor example to invoke Juniper's functions annd params one has to re-write the above with ***device_params={'name':'junos'}***:\r\n\r\n    from ncclient import manager\r\n\r\n    with manager.connect(host=host, port=830, username=user, hostkey_verify=False, device_params={'name':'junos'}) as m:\r\n        c = m.get_config(source='running').data_xml\r\n        with open(\"%s.xml\" % host, 'w') as f:\r\n            f.write(c)\r\n\r\nDevice handlers are easy to implement and prove to be futureproof.\r\n\r\n####Supported device handlers\r\n\r\n* Juniper: device_params={'name':'junos'}\r\n* Cisco CSR: device_params={'name':'csr'}\r\n* Cisco Nexus: device_params={'name':'nexus'}\r\n* Huawei: device_params={'name':'huawei'}\r\n* Alcatel Lucent: device_params={'name':'alu'}\r\n* H3C: device_params={'name':'h3c'}\r\n* HP Comware: device_params={'name':'hpcomware'}\r\n\r\n\r\n### Changes | brief\r\n\r\n* Python 3 support\r\n\r\n\r\n### Acknowledgements\r\n\r\n* v0.5.0: Thanks to all contribs and bug hunters; [Nitin Kumar] (https://github.com/vnitinv)\r\n* v0.4.7: Thanks to all contribs and bug hunters; [Einar Nilsen-Nygaard] (https://github.com/einarnn), [Vaibhav Bajpai] (https://github.com/vbajpai), Norio Nakamoto \r\n* v0.4.6: Thanks to all contribs and bug hunters; [Nitin Kumar] (https://github.com/vnitinv), [Carl Moberg] (https://github.com/cmoberg), [Stavros Kroustouris] (https://github.com/kroustou) \r\n* v0.4.5: Thanks to all contribs and bug hunters; [Sebastian Wiesinger] (https://github.com/sebastianw), [Vincent Bernat] (https://github.com/vincentbernat), [Matthew Stone] (https://github.com/bigmstone), [Nitin Kumar] (https://github.com/vnitinv)\r\n* v0.4.3: Thanks to all contributors and bug hunters; [Jeremy Schulman](https://github.com/jeremyschulman), [Ray Solomon](https://github.com/rsolomo), [Rick Sherman](https://github.com/shermdog), [subhak186](https://github.com/subhak186)\r\n* v0.4.2: Thanks to all contributors; [katharh](https://github.com/katharh), [Francis Luong (Franco)](https://github.com/francisluong), [Vincent Bernat](https://github.com/vincentbernat), [Juergen Brendel](https://github.com/juergenbrendel), [Quentin Loos](https://github.com/Kent1), [Ray Solomon](https://github.com/rsolomo), [Sebastian Wiesinger](https://github.com/sebastianw), [Ebben Aries](https://github.com/earies) \r\n* v0.4.1: Many thanks, primarily to [Jeremy Schulman](https://github.com/jeremyschulman) (Juniper) for providing his precious feedback, to [Ebben Aries](https://github.com/earies) (Juniper) for his contribution, to Juergen Brendel (Cisco) for the Cisco fork and to all contributors from Cisco and Juniper.\r\n","google":"UA-55440654-1","note":"Don't delete this file! It's used internally to help with page regeneration."}